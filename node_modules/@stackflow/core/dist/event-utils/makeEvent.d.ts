import type { DomainEvent } from "../event-types";
import type { BaseDomainEvent } from "../event-types/_base";
export declare function makeEvent<T extends DomainEvent["name"]>(name: T, parameters: Omit<Extract<DomainEvent, {
    name: T;
}>, "id" | "name" | "eventDate"> & Partial<BaseDomainEvent>): Extract<import("../event-types").ActivityRegisteredEvent, {
    name: T;
}> | Extract<import("../event-types").InitializedEvent, {
    name: T;
}> | Extract<import("../event-types").PoppedEvent, {
    name: T;
}> | Extract<import("../event-types").PushedEvent, {
    name: T;
}> | Extract<import("../event-types").ReplacedEvent, {
    name: T;
}> | Extract<{
    id: string;
    name: "StepPopped";
    eventDate: number;
}, {
    name: T;
}> | Extract<import("../event-types").StepPushedEvent, {
    name: T;
}> | Extract<import("../event-types").StepReplacedEvent, {
    name: T;
}>;
