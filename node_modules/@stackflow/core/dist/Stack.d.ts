import type { PoppedEvent, PushedEvent, ReplacedEvent, StepPoppedEvent, StepPushedEvent, StepReplacedEvent } from "./event-types";
export declare type ActivityTransition = "enter" | "exit";
export declare type ActivityTransitionProgress = "active" | "done";
export declare type ActivityTransitionState = `${ActivityTransition}-${ActivityTransitionProgress}`;
export declare type ActivityStep = {
    id: string;
    params: {
        [key: string]: string | undefined;
    };
    enteredBy: PushedEvent | ReplacedEvent | StepPushedEvent | StepReplacedEvent;
    exitedBy?: ReplacedEvent | PoppedEvent | StepReplacedEvent | StepPoppedEvent;
};
export declare type Activity = {
    id: string;
    name: string;
    transitionState: ActivityTransitionState;
    params: {
        [key: string]: string | undefined;
    };
    context?: {};
    enteredBy: PushedEvent | ReplacedEvent;
    exitedBy?: ReplacedEvent | PoppedEvent;
    steps: ActivityStep[];
    isTop: boolean;
    isActive: boolean;
    isRoot: boolean;
    zIndex: number;
};
export declare type RegisteredActivity = {
    name: string;
    paramsSchema?: {};
};
export declare type Stack = {
    activities: Activity[];
    registeredActivities: RegisteredActivity[];
    transitionDuration: number;
    globalTransitionState: "idle" | "loading";
};
