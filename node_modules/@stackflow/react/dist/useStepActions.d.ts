import type { ActivityComponentType } from "./activity";
import type { BaseActivities } from "./BaseActivities";
export declare type UseStepActionsOutputType<P> = {
    pending: boolean;
    stepPush: (params: P, options?: {}) => void;
    stepReplace: (params: P, options?: {}) => void;
    stepPop: (options?: {}) => void;
};
export declare type UseStepActions<T extends BaseActivities = {}> = <K extends Extract<keyof T, string>>(activityName: K) => UseStepActionsOutputType<T[K] extends ActivityComponentType<infer U> | {
    component: ActivityComponentType<infer U>;
} ? U : {}>;
export declare const useStepActions: UseStepActions;
